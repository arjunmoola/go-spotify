// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: queries.sql

package database

import (
	"context"
)

const getClientInfo = `-- name: GetClientInfo :one
SELECT client_secret, client_id FROM config WHERE id = 1
`

type GetClientInfoRow struct {
	ClientSecret string
	ClientID     string
}

func (q *Queries) GetClientInfo(ctx context.Context) (GetClientInfoRow, error) {
	row := q.db.QueryRowContext(ctx, getClientInfo)
	var i GetClientInfoRow
	err := row.Scan(&i.ClientSecret, &i.ClientID)
	return i, err
}

const insertConfig = `-- name: InsertConfig :exec
INSERT INTO config (client_secret, client_id) VALUES (?, ?)
`

type InsertConfigParams struct {
	ClientSecret string
	ClientID     string
}

func (q *Queries) InsertConfig(ctx context.Context, arg InsertConfigParams) error {
	_, err := q.db.ExecContext(ctx, insertConfig, arg.ClientSecret, arg.ClientID)
	return err
}
